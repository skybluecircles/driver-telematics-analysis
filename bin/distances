#!/bin/bash

# We're passing the coordinates through bin/util/distances
# to output the distance between each point.

# We save a copy of this by using 'tee', but also pipe STDOUT
# through a perl script to calculate the sum of these points.

# We print the sum to STDOUT and redirect that to a file
# called 'distance', BUT, we also print the number of records
# to STDERR and redirect that to 'duration'.

# Yes, I know.

set -e
set -o pipefail

data=$DTA_DATA

if [ ! $data ]
then
    echo "Please define the environment variable DTA_DATA" >&2
    exit 1
fi

driver_id=${1-1}
first_trip=${2-1}
last_trip=${3-200}

if [ $last_trip -gt 200 ]
then
    echo "Max value for \$3 (last_trip) is 200 but you passed ($last_trip)" >&2
    exit 1
fi

for driver in $data/driver/$driver_id
do
    if [ ! -d $driver ]
    then
        echo "No directory for ($driver)" >&2
        exit 1
    fi

    for (( i=$first_trip; i<=$last_trip; i++ ))
    do
        driver_trip=$driver/trip/$i

        cat $driver_trip/coordinates \
      | bin/util/distances \
      | tee $driver_trip/distances \
      | perl -ne '$sum += $_; END { print $sum, $/; print STDERR $., $/ }' \
      > $driver_trip/distance \
     2> $driver_trip/duration
    done

    if [ -f $driver/distances ]
    then
        rm $driver/distances
    fi

    if [ -f $driver/durations ]
    then
        rm $driver/durations
    fi 

    for (( i=$first_trip; i<=$last_trip; i++ ))
    do
        driver_trip=$driver/trip/$i

        cat $driver_trip/distance >> $driver/distances
        cat $driver_trip/duration >> $driver/durations
    done
done
