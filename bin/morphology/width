#!/bin/bash

set -e
set -o pipefail

data=$DTA_DATA

if [ ! $data ]
then
    echo 'Please export DTA_DATA' >&2
    exit 1
fi

driver_id=${1-1}

for driver in $data/driver/$driver_id
do
    for i in {1..200}
    do
        driver_trip=$driver/trip/$i

        # Output the indicies (lines) in coordinates-cartesian-rotated
        # which correspond to the left and right-most points

        cut -f 1 -d, $driver_trip/coordinates-cartesian-rotated \
      | perl -n bin/util/left-right-indicies \
      > $driver_trip/left-right-indicies

        # Use these indicies to output the actual points

        left_index=$( cat $driver_trip/left-right-indicies | cut -f 1 -d, )
        right_index=$( cat $driver_trip/left-right-indicies | cut -f 2 -d, )

        sed -n ${left_index}p $driver_trip/coordinates-cartesian-rotated \
      > $driver_trip/left-most-point-cartesian

        sed -n ${right_index}p $driver_trip/coordinates-cartesian-rotated \
      > $driver_trip/right-most-point-cartesian

        # Then add the absolute value of the x coordinates together
        # to get the trip "width"

        # I can just use -n because in perl + sees "x,y" as just x
        # e.g. "5,4" + "7,9" would just be seen as 5 + 7

        # This is a bit funny, but it saves me from having to split
        # the values

      ( cat $driver_trip/right-most-point-cartesian; \
        cat $driver_trip/left-most-point-cartesian ) \
      | perl -n -e '$sum += abs($_); END { print $sum, $/ }' \
      > $driver_trip/width
    done
done
